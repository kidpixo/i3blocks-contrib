!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
iface	iface/README.md	/^# iface$/;"	c
Config	iface/README.md	/^# Config$/;"	c
iface	iface/i3blocks.conf	/^[iface]$/;"	s
command	iface/i3blocks.conf	/^command=$SCRIPT_DIR\/iface$/;"	k	section:iface
color	iface/i3blocks.conf	/^color=#00FF00$/;"	k	section:iface
interval	iface/i3blocks.conf	/^interval=10$/;"	k	section:iface
capability	volume/volume	/^capability() { # Return "Capture" if the device is a capture device$/;"	f
volume	volume/volume	/^volume() {$/;"	f
format	volume/volume	/^format() {$/;"	f
volume	volume/README.md	/^# volume$/;"	c
Usage	volume/README.md	/^# Usage$/;"	c
Config	volume/README.md	/^# Config$/;"	c
volume	volume/i3blocks.conf	/^[volume]$/;"	s
command	volume/i3blocks.conf	/^command=$SCRIPT_DIR\/volume$/;"	k	section:volume
LABEL	volume/i3blocks.conf	/^LABEL=VOL $/;"	k	section:volume
interval	volume/i3blocks.conf	/^interval=once$/;"	k	section:volume
signal	volume/i3blocks.conf	/^signal=10$/;"	k	section:volume
create_argparse	arch-update/arch-update	/^def create_argparse():$/;"	f
_default	arch-update/arch-update	/^    def _default(name, default='', arg_type=str):$/;"	f	function:create_argparse	file:
strbool	arch-update/arch-update	/^    strbool = lambda s: s.lower() in ['t', 'true', '1']$/;"	f	function:create_argparse	file:
strlist	arch-update/arch-update	/^    strlist = lambda s: s.split()$/;"	f	function:create_argparse	file:
get_updates	arch-update/arch-update	/^def get_updates():$/;"	f
get_aur_updates	arch-update/arch-update	/^def get_aur_updates():$/;"	f
matching_updates	arch-update/arch-update	/^def matching_updates(updates, watch_list):$/;"	f
label	arch-update/arch-update	/^label = os.environ.get("LABEL","")$/;"	v
message	arch-update/arch-update	/^message = "{0}<span color='{1}'>{2}<\/span>"$/;"	v
args	arch-update/arch-update	/^args = create_argparse()$/;"	v
updates	arch-update/arch-update	/^updates = get_updates()$/;"	v
update_count	arch-update/arch-update	/^update_count = len(updates)$/;"	v
info	arch-update/arch-update	/^    info = str(update_count) + ' updates available'$/;"	v
short_info	arch-update/arch-update	/^    short_info = str(update_count) + ' updates'$/;"	v
matches	arch-update/arch-update	/^    matches = matching_updates(updates, args.watch)$/;"	v
arch-update	arch-update/README.md	/^# arch-update$/;"	c
Dependencies	arch-update/README.md	/^# Dependencies$/;"	c
Optional Dependencies	arch-update/README.md	/^# Optional Dependencies$/;"	c
Installation	arch-update/README.md	/^# Installation$/;"	c
Configuration	arch-update/README.md	/^# Configuration$/;"	c
create_argparse	arch-update/arch-update.py	/^def create_argparse():$/;"	f
_default	arch-update/arch-update.py	/^    def _default(name, default='', arg_type=str):$/;"	f	function:create_argparse	file:
strbool	arch-update/arch-update.py	/^    strbool = lambda s: s.lower() in ['t', 'true', '1']$/;"	f	function:create_argparse	file:
strlist	arch-update/arch-update.py	/^    strlist = lambda s: s.split()$/;"	f	function:create_argparse	file:
get_updates	arch-update/arch-update.py	/^def get_updates():$/;"	f
get_aur_updates	arch-update/arch-update.py	/^def get_aur_updates():$/;"	f
matching_updates	arch-update/arch-update.py	/^def matching_updates(updates, watch_list):$/;"	f
label	arch-update/arch-update.py	/^label = os.environ.get("LABEL","")$/;"	v
message	arch-update/arch-update.py	/^message = "{0}<span color='{1}'>{2}<\/span>"$/;"	v
args	arch-update/arch-update.py	/^args = create_argparse()$/;"	v
updates	arch-update/arch-update.py	/^updates = get_updates()$/;"	v
update_count	arch-update/arch-update.py	/^update_count = len(updates)$/;"	v
info	arch-update/arch-update.py	/^    info = str(update_count) + ' updates available'$/;"	v
short_info	arch-update/arch-update.py	/^    short_info = str(update_count) + ' updates'$/;"	v
matches	arch-update/arch-update.py	/^    matches = matching_updates(updates, args.watch)$/;"	v
battery	battery/README.md	/^# battery$/;"	c
Dependencies	battery/README.md	/^# Dependencies$/;"	c
Config	battery/README.md	/^# Config$/;"	c
battery	battery/i3blocks.conf	/^[battery]$/;"	s
command	battery/i3blocks.conf	/^command=$SCRIPT_DIR\/battery$/;"	k	section:battery
interval	battery/i3blocks.conf	/^interval=30$/;"	k	section:battery
LABEL	battery/i3blocks.conf	/^LABEL=BAT$/;"	k	section:battery
batterybar	batterybar/README.md	/^# batterybar$/;"	c
Dependencies	batterybar/README.md	/^# Dependencies$/;"	c
Installation	batterybar/README.md	/^# Installation$/;"	c
Expected behavior	ISSUE_TEMPLATE.md	/^### Expected behavior$/;"	S
Actual behavior	ISSUE_TEMPLATE.md	/^### Actual behavior$/;"	S
i3blocks config relevant to blocklet(s)	ISSUE_TEMPLATE.md	/^### i3blocks config relevant to blocklet(s)$/;"	S
Output of blocklet(s) when run from command line	ISSUE_TEMPLATE.md	/^### Output of blocklet(s) when run from command line$/;"	S
Output of any relevant other commands that might help diagnostics	ISSUE_TEMPLATE.md	/^### Output of any relevant other commands that might help diagnostics$/;"	S
move_sinks_to_new_default	volume-pulseaudio/volume-pulseaudio	/^function move_sinks_to_new_default {$/;"	f
set_default_playback_device_next	volume-pulseaudio/volume-pulseaudio	/^function set_default_playback_device_next {$/;"	f
print_format	volume-pulseaudio/volume-pulseaudio	/^function print_format {$/;"	f
print_block	volume-pulseaudio/volume-pulseaudio	/^function print_block {$/;"	f
volume-pulseaudio	volume-pulseaudio/README.md	/^# volume-pulseaudio$/;"	c
Dependencies	volume-pulseaudio/README.md	/^# Dependencies$/;"	c
Usage	volume-pulseaudio/README.md	/^# Usage$/;"	c
Config	volume-pulseaudio/README.md	/^# Config$/;"	c
volume-pulseaudio	volume-pulseaudio/i3blocks.conf	/^[volume-pulseaudio]$/;"	s
command	volume-pulseaudio/i3blocks.conf	/^command=$SCRIPT_DIR\/volume-pulseaudio$/;"	k	section:volume-pulseaudio
interval	volume-pulseaudio/i3blocks.conf	/^interval=persist$/;"	k	section:volume-pulseaudio
SUBSCRIBE	volume-pulseaudio/i3blocks.conf	/^SUBSCRIBE=1$/;"	k	section:volume-pulseaudio
USE_ALSA_NAME	volume-pulseaudio/i3blocks.conf	/^USE_ALSA_NAME=1$/;"	k	section:volume-pulseaudio
volume-pulseaudio	volume-pulseaudio/i3blocks.conf	/^[volume-pulseaudio]$/;"	s
command	volume-pulseaudio/i3blocks.conf	/^command=$SCRIPT_DIR\/volume-pulseaudio$/;"	k	section:volume-pulseaudio
interval	volume-pulseaudio/i3blocks.conf	/^interval=once$/;"	k	section:volume-pulseaudio
signal	volume-pulseaudio/i3blocks.conf	/^signal=1$/;"	k	section:volume-pulseaudio
USE_ALSA_NAME	volume-pulseaudio/i3blocks.conf	/^USE_ALSA_NAME=1$/;"	k	section:volume-pulseaudio
print_output	openvpn/openvpn	/^sub print_output {$/;"	s
check_opts	openvpn/openvpn	/^sub check_opts {$/;"	s
help	openvpn/openvpn	/^sub help {$/;"	s
openvpn	openvpn/README.md	/^# openvpn$/;"	c
Usage	openvpn/README.md	/^# Usage$/;"	c
Options	openvpn/README.md	/^# Options$/;"	c
disk	disk/README.md	/^# disk$/;"	c
Config	disk/README.md	/^# Config$/;"	c
disk	disk/i3blocks.conf	/^[disk]$/;"	s
command	disk/i3blocks.conf	/^command=$SCRIPT_DIR\/disk$/;"	k	section:disk
LABEL	disk/i3blocks.conf	/^LABEL=HOME $/;"	k	section:disk
interval	disk/i3blocks.conf	/^interval=30$/;"	k	section:disk
get_tz	time/time	/^sub get_tz {$/;"	s
set_tz	time/time	/^sub set_tz {$/;"	s
get_default_tz	time/time	/^sub get_default_tz {$/;"	s
time	time/README.md	/^# time$/;"	c
Dependencies	time/README.md	/^# Dependencies$/;"	c
Installation	time/README.md	/^# Installation$/;"	c
time	time/i3blocks.conf	/^[time]$/;"	s
command	time/i3blocks.conf	/^command=$SCRIPT_DIR\/time$/;"	k	section:time
interval	time/i3blocks.conf	/^interval=1$/;"	k	section:time
STRFTIME_FORMAT	time/i3blocks.conf	/^STRFTIME_FORMAT=%Y-%m-%d %H:%M$/;"	k	section:time
TZONES	time/i3blocks.conf	/^TZONES=$DEFAULT_TZ,Brazil\/East,Australia\/Brisbane,Asia\/Calcutta$/;"	k	section:time
TZ_LABELS	time/i3blocks.conf	/^TZ_LABELS=,Brazil,AU,Hyderabad$/;"	k	section:time
rofi-calendar	rofi-calendar/README.md	/^# rofi-calendar$/;"	c
Dependencies	rofi-calendar/README.md	/^# Dependencies$/;"	c
Installation	rofi-calendar/README.md	/^# Installation$/;"	c
xkb_layout	xkb_layout/README.md	/^# xkb_layout$/;"	c
Requires:	xkb_layout/README.md	/^# Requires:$/;"	c
i3blocks config example:	xkb_layout/README.md	/^# i3blocks config example:$/;"	c
keyring_loaded	email/email	/^    keyring_loaded = True$/;"	v
keyring_loaded	email/email	/^    keyring_loaded = False$/;"	v
config	email/email	/^config = {$/;"	v
get_args	email/email	/^def get_args():$/;"	f
parse_instance	email/email	/^def parse_instance():$/;"	f
parse_config	email/email	/^def parse_config(INSTANCE):$/;"	f
get_PASS	email/email	/^def get_PASS():$/;"	f
block_event	email/email	/^def block_event():$/;"	f
serf	email/email	/^def serf():$/;"	f
printer	email/email	/^def printer(new_count):$/;"	f
email	email/README.md	/^# email$/;"	c
Dependencies	email/README.md	/^# Dependencies$/;"	c
Usage	email/README.md	/^# Usage$/;"	c
font	monitor_manager/monitor_manager	/^import tkinter.font as font$/;"	I
DESKTOP_SYMBOL	monitor_manager/monitor_manager	/^DESKTOP_SYMBOL = "\\uf108"$/;"	v
UP_ARROW	monitor_manager/monitor_manager	/^UP_ARROW = "\\uf062"$/;"	v
DOWN_ARROW	monitor_manager/monitor_manager	/^DOWN_ARROW = "\\uf063"$/;"	v
UNBLANKED_SYMBOL	monitor_manager/monitor_manager	/^UNBLANKED_SYMBOL = "\\uf06e"$/;"	v
BLANKED_SYMBOL	monitor_manager/monitor_manager	/^BLANKED_SYMBOL = "\\uf070"$/;"	v
NOT_CLONED_SYMBOL	monitor_manager/monitor_manager	/^NOT_CLONED_SYMBOL = "\\uf096"$/;"	v
PRIMARY_SYMBOL	monitor_manager/monitor_manager	/^PRIMARY_SYMBOL = "\\uf005"$/;"	v
SECONDARY_SYMBOL	monitor_manager/monitor_manager	/^SECONDARY_SYMBOL = "\\uf006"$/;"	v
CLONED_SYMBOL	monitor_manager/monitor_manager	/^CLONED_SYMBOL = "\\uf24d"$/;"	v
ROTATION_NORMAL	monitor_manager/monitor_manager	/^ROTATION_NORMAL = "\\uf151"$/;"	v
ROTATION_LEFT	monitor_manager/monitor_manager	/^ROTATION_LEFT = "\\uf191"$/;"	v
ROTATION_RIGHT	monitor_manager/monitor_manager	/^ROTATION_RIGHT = "\\uf152"$/;"	v
ROTATION_INVERTED	monitor_manager/monitor_manager	/^ROTATION_INVERTED = "\\uf150"$/;"	v
REFLECTION_NORMAL	monitor_manager/monitor_manager	/^REFLECTION_NORMAL = "\\uf176"$/;"	v
REFLECTION_X	monitor_manager/monitor_manager	/^REFLECTION_X = "\\uf07e"$/;"	v
REFLECTION_Y	monitor_manager/monitor_manager	/^REFLECTION_Y = "\\uf07d"$/;"	v
REFLECTION_XY	monitor_manager/monitor_manager	/^REFLECTION_XY = "\\uf047"$/;"	v
TOGGLE_ON	monitor_manager/monitor_manager	/^TOGGLE_ON = "\\uf205"$/;"	v
TOGGLE_OFF	monitor_manager/monitor_manager	/^TOGGLE_OFF = "\\uf204"$/;"	v
APPLY_SYMBOL	monitor_manager/monitor_manager	/^APPLY_SYMBOL = "\\uf00c"$/;"	v
CANCEL_SYMBOL	monitor_manager/monitor_manager	/^CANCEL_SYMBOL = "\\uf00d"$/;"	v
ARANDR_SYMBOL	monitor_manager/monitor_manager	/^ARANDR_SYMBOL = "\\uf085"$/;"	v
REFRESH_SYMBOL	monitor_manager/monitor_manager	/^REFRESH_SYMBOL = "\\uf021"$/;"	v
strbool	monitor_manager/monitor_manager	/^strbool = lambda s: s.lower() in ['t', 'true', '1']$/;"	f
_default	monitor_manager/monitor_manager	/^def _default(name, default='', arg_type=strbool):$/;"	f
SHOW_ON_OFF	monitor_manager/monitor_manager	/^SHOW_ON_OFF = _default("SHOW_ON_OFF","1") $/;"	v
SHOW_NAMES	monitor_manager/monitor_manager	/^SHOW_NAMES = _default("SHOW_NAMES", "1")$/;"	v
SHOW_PRIMARY	monitor_manager/monitor_manager	/^SHOW_PRIMARY = _default("SHOW_PRIMARY", "1")$/;"	v
SHOW_MODE	monitor_manager/monitor_manager	/^SHOW_MODE = _default("SHOW_MODE", "1")$/;"	v
SHOW_BLANKED	monitor_manager/monitor_manager	/^SHOW_BLANKED = _default("SHOW_BLANKED", "1")$/;"	v
SHOW_DUPLICATE	monitor_manager/monitor_manager	/^SHOW_DUPLICATE = _default("SHOW_DUPLICATE", "1")$/;"	v
SHOW_ROTATION	monitor_manager/monitor_manager	/^SHOW_ROTATION = _default("SHOW_ROTATION", "1")$/;"	v
SHOW_REFLECTION	monitor_manager/monitor_manager	/^SHOW_REFLECTION = _default("SHOW_REFLECTION", "1") $/;"	v
SHOW_BRIGHTNESS	monitor_manager/monitor_manager	/^SHOW_BRIGHTNESS = _default("SHOW_BRIGHTNESS", "1")$/;"	v
SHOW_BRIGHTNESS_VALUE	monitor_manager/monitor_manager	/^SHOW_BRIGHTNESS_VALUE = _default("SHOW_BRIGHTNESS_VALUE", "0")$/;"	v
SHOW_UP_DOWN	monitor_manager/monitor_manager	/^SHOW_UP_DOWN = _default("SHOW_UP_DOWN", "1")$/;"	v
FONTAWESOME_FONT_FAMILY	monitor_manager/monitor_manager	/^FONTAWESOME_FONT_FAMILY = "FontAwesome"$/;"	v
FONTAWESOME_FONT_SIZE	monitor_manager/monitor_manager	/^FONTAWESOME_FONT_SIZE = 11$/;"	v
FONTAWESOME_FONT	monitor_manager/monitor_manager	/^FONTAWESOME_FONT = (FONTAWESOME_FONT_FAMILY, FONTAWESOME_FONT_SIZE)$/;"	v
DEFAULT_FONT_FAMILY	monitor_manager/monitor_manager	/^DEFAULT_FONT_FAMILY = _default("FONT_FAMILY","DejaVu Sans Mono", str)$/;"	v
DEFAULT_FONT_SIZE	monitor_manager/monitor_manager	/^DEFAULT_FONT_SIZE = _default("FONT_SIZE", 11, int)$/;"	v
DEFAULT_FONT	monitor_manager/monitor_manager	/^DEFAULT_FONT = (DEFAULT_FONT_FAMILY, DEFAULT_FONT_SIZE)$/;"	v
BRIGHTNESS_SLIDER_HANDLE_LENGTH	monitor_manager/monitor_manager	/^BRIGHTNESS_SLIDER_HANDLE_LENGTH = 20$/;"	v
BRIGHTNESS_SLIDER_WIDTH	monitor_manager/monitor_manager	/^BRIGHTNESS_SLIDER_WIDTH = 15$/;"	v
BRIGHTNESS_SLIDER_LENGTH	monitor_manager/monitor_manager	/^BRIGHTNESS_SLIDER_LENGTH = 50$/;"	v
WINDOW_CLOSE_TO_BOUNDARY_BUFFER	monitor_manager/monitor_manager	/^WINDOW_CLOSE_TO_BOUNDARY_BUFFER = _default("CLOSE_TO_BOUNDARY_BUFFER", 20, int)$/;"	v
Output	monitor_manager/monitor_manager	/^class Output:$/;"	c
__init__	monitor_manager/monitor_manager	/^    def __init__(self, name=None, w=None, h=None, x=None, y=None, rate=None,$/;"	m	class:Output
setPreferredMode	monitor_manager/monitor_manager	/^    def setPreferredMode(self):$/;"	m	class:Output
setMode	monitor_manager/monitor_manager	/^    def setMode(self, index):$/;"	m	class:Output
realOutputs	monitor_manager/monitor_manager	/^    def realOutputs():$/;"	m	class:Output
modestr	monitor_manager/monitor_manager	/^    def modestr(mode):$/;"	m	class:Output
status	monitor_manager/monitor_manager	/^    def status(self):$/;"	m	class:Output
__str__	monitor_manager/monitor_manager	/^    def __str__(self):$/;"	m	class:Output
MonitorManager	monitor_manager/monitor_manager	/^class MonitorManager():$/;"	c
__init__	monitor_manager/monitor_manager	/^    def __init__(self, root):$/;"	m	class:MonitorManager
registerBindings	monitor_manager/monitor_manager	/^    def registerBindings(self):$/;"	m	class:MonitorManager
gridRow	monitor_manager/monitor_manager	/^    def gridRow(self, row, widgets):$/;"	m	class:MonitorManager
moveToMouse	monitor_manager/monitor_manager	/^    def moveToMouse(self):$/;"	m	class:MonitorManager
setInfo	monitor_manager/monitor_manager	/^    def setInfo(self, widget, info):$/;"	m	class:MonitorManager
handleApply	monitor_manager/monitor_manager	/^    def handleApply(self, e=None):$/;"	m	class:MonitorManager
doHandleApply	monitor_manager/monitor_manager	/^    def doHandleApply(self):$/;"	m	class:MonitorManager
executeXrandrCommand	monitor_manager/monitor_manager	/^    def executeXrandrCommand(self, command):$/;"	m	class:MonitorManager
getUserConfirmationIfDangerousConfiguration	monitor_manager/monitor_manager	/^    def getUserConfirmationIfDangerousConfiguration(self):$/;"	m	class:MonitorManager
sameAsPartition	monitor_manager/monitor_manager	/^    def sameAsPartition(self):$/;"	m	class:MonitorManager
handleCancel	monitor_manager/monitor_manager	/^    def handleCancel(self, e=None):$/;"	m	class:MonitorManager
handleArandr	monitor_manager/monitor_manager	/^    def handleArandr(self, e=None):$/;"	m	class:MonitorManager
handleUp	monitor_manager/monitor_manager	/^    def handleUp(self, e):$/;"	m	class:MonitorManager
handleDown	monitor_manager/monitor_manager	/^    def handleDown(self, e):$/;"	m	class:MonitorManager
swapOutputRows	monitor_manager/monitor_manager	/^    def swapOutputRows(self, row1, row2):$/;"	m	class:MonitorManager
setPrimary	monitor_manager/monitor_manager	/^    def setPrimary(self, e):$/;"	m	class:MonitorManager
existsPrimary	monitor_manager/monitor_manager	/^    def existsPrimary(self):$/;"	m	class:MonitorManager
toggleActive	monitor_manager/monitor_manager	/^    def toggleActive(self, e):$/;"	m	class:MonitorManager
toggleBlanked	monitor_manager/monitor_manager	/^    def toggleBlanked(self, e):$/;"	m	class:MonitorManager
updateBrightness	monitor_manager/monitor_manager	/^    def updateBrightness(self, e):$/;"	m	class:MonitorManager
cycleRotation	monitor_manager/monitor_manager	/^    def cycleRotation(self, e):$/;"	m	class:MonitorManager
rotationSymbol	monitor_manager/monitor_manager	/^    def rotationSymbol(self, rotation):$/;"	m	class:MonitorManager
cycleReflection	monitor_manager/monitor_manager	/^    def cycleReflection(self, e):$/;"	m	class:MonitorManager
reflectionSymbol	monitor_manager/monitor_manager	/^    def reflectionSymbol(self, reflection):$/;"	m	class:MonitorManager
toggleDuplicate	monitor_manager/monitor_manager	/^    def toggleDuplicate(self, e):$/;"	m	class:MonitorManager
getDuplicableOutputsFor	monitor_manager/monitor_manager	/^    def getDuplicableOutputsFor(self, output):$/;"	m	class:MonitorManager
softRefreshList	monitor_manager/monitor_manager	/^    def softRefreshList(self, e=None):$/;"	m	class:MonitorManager
hardRefreshList	monitor_manager/monitor_manager	/^    def hardRefreshList(self, e=None):$/;"	m	class:MonitorManager
populateGrid	monitor_manager/monitor_manager	/^    def populateGrid(self):$/;"	m	class:MonitorManager
makeLabelRow	monitor_manager/monitor_manager	/^    def makeLabelRow(self, output, row):$/;"	m	class:MonitorManager
setMenuToOutput	monitor_manager/monitor_manager	/^    def setMenuToOutput(self, optionMenu, output):$/;"	m	class:MonitorManager
setMenuToDuplicate	monitor_manager/monitor_manager	/^    def setMenuToDuplicate(self, optionMenu):$/;"	m	class:MonitorManager
handleFocusOut	monitor_manager/monitor_manager	/^    def handleFocusOut(self, event):$/;"	m	class:MonitorManager
setLabelAndOutputModeFunc	monitor_manager/monitor_manager	/^def setLabelAndOutputModeFunc(var, label, output, i):$/;"	f
func	monitor_manager/monitor_manager	/^    def func():$/;"	f	function:setLabelAndOutputModeFunc	file:
setLabelAndSameAsFunc	monitor_manager/monitor_manager	/^def setLabelAndSameAsFunc(var, sameAs, output):$/;"	f
func	monitor_manager/monitor_manager	/^    def func():$/;"	f	function:setLabelAndSameAsFunc	file:
root	monitor_manager/monitor_manager	/^        root = Tk()$/;"	v
manager	monitor_manager/monitor_manager	/^        manager = MonitorManager(root)$/;"	v
monitor_manager	monitor_manager/README.md	/^# monitor_manager$/;"	c
Dependencies	monitor_manager/README.md	/^# Dependencies$/;"	c
Usage	monitor_manager/README.md	/^# Usage$/;"	c
font	monitor_manager/monitor_manager.py	/^import tkinter.font as font$/;"	I
DESKTOP_SYMBOL	monitor_manager/monitor_manager.py	/^DESKTOP_SYMBOL = "\\uf108"$/;"	v
UP_ARROW	monitor_manager/monitor_manager.py	/^UP_ARROW = "\\uf062"$/;"	v
DOWN_ARROW	monitor_manager/monitor_manager.py	/^DOWN_ARROW = "\\uf063"$/;"	v
UNBLANKED_SYMBOL	monitor_manager/monitor_manager.py	/^UNBLANKED_SYMBOL = "\\uf06e"$/;"	v
BLANKED_SYMBOL	monitor_manager/monitor_manager.py	/^BLANKED_SYMBOL = "\\uf070"$/;"	v
NOT_CLONED_SYMBOL	monitor_manager/monitor_manager.py	/^NOT_CLONED_SYMBOL = "\\uf096"$/;"	v
PRIMARY_SYMBOL	monitor_manager/monitor_manager.py	/^PRIMARY_SYMBOL = "\\uf005"$/;"	v
SECONDARY_SYMBOL	monitor_manager/monitor_manager.py	/^SECONDARY_SYMBOL = "\\uf006"$/;"	v
CLONED_SYMBOL	monitor_manager/monitor_manager.py	/^CLONED_SYMBOL = "\\uf24d"$/;"	v
ROTATION_NORMAL	monitor_manager/monitor_manager.py	/^ROTATION_NORMAL = "\\uf151"$/;"	v
ROTATION_LEFT	monitor_manager/monitor_manager.py	/^ROTATION_LEFT = "\\uf191"$/;"	v
ROTATION_RIGHT	monitor_manager/monitor_manager.py	/^ROTATION_RIGHT = "\\uf152"$/;"	v
ROTATION_INVERTED	monitor_manager/monitor_manager.py	/^ROTATION_INVERTED = "\\uf150"$/;"	v
REFLECTION_NORMAL	monitor_manager/monitor_manager.py	/^REFLECTION_NORMAL = "\\uf176"$/;"	v
REFLECTION_X	monitor_manager/monitor_manager.py	/^REFLECTION_X = "\\uf07e"$/;"	v
REFLECTION_Y	monitor_manager/monitor_manager.py	/^REFLECTION_Y = "\\uf07d"$/;"	v
REFLECTION_XY	monitor_manager/monitor_manager.py	/^REFLECTION_XY = "\\uf047"$/;"	v
TOGGLE_ON	monitor_manager/monitor_manager.py	/^TOGGLE_ON = "\\uf205"$/;"	v
TOGGLE_OFF	monitor_manager/monitor_manager.py	/^TOGGLE_OFF = "\\uf204"$/;"	v
APPLY_SYMBOL	monitor_manager/monitor_manager.py	/^APPLY_SYMBOL = "\\uf00c"$/;"	v
CANCEL_SYMBOL	monitor_manager/monitor_manager.py	/^CANCEL_SYMBOL = "\\uf00d"$/;"	v
ARANDR_SYMBOL	monitor_manager/monitor_manager.py	/^ARANDR_SYMBOL = "\\uf085"$/;"	v
REFRESH_SYMBOL	monitor_manager/monitor_manager.py	/^REFRESH_SYMBOL = "\\uf021"$/;"	v
strbool	monitor_manager/monitor_manager.py	/^strbool = lambda s: s.lower() in ['t', 'true', '1']$/;"	f
_default	monitor_manager/monitor_manager.py	/^def _default(name, default='', arg_type=strbool):$/;"	f
SHOW_ON_OFF	monitor_manager/monitor_manager.py	/^SHOW_ON_OFF = _default("SHOW_ON_OFF","1") $/;"	v
SHOW_NAMES	monitor_manager/monitor_manager.py	/^SHOW_NAMES = _default("SHOW_NAMES", "1")$/;"	v
SHOW_PRIMARY	monitor_manager/monitor_manager.py	/^SHOW_PRIMARY = _default("SHOW_PRIMARY", "1")$/;"	v
SHOW_MODE	monitor_manager/monitor_manager.py	/^SHOW_MODE = _default("SHOW_MODE", "1")$/;"	v
SHOW_BLANKED	monitor_manager/monitor_manager.py	/^SHOW_BLANKED = _default("SHOW_BLANKED", "1")$/;"	v
SHOW_DUPLICATE	monitor_manager/monitor_manager.py	/^SHOW_DUPLICATE = _default("SHOW_DUPLICATE", "1")$/;"	v
SHOW_ROTATION	monitor_manager/monitor_manager.py	/^SHOW_ROTATION = _default("SHOW_ROTATION", "1")$/;"	v
SHOW_REFLECTION	monitor_manager/monitor_manager.py	/^SHOW_REFLECTION = _default("SHOW_REFLECTION", "1") $/;"	v
SHOW_BRIGHTNESS	monitor_manager/monitor_manager.py	/^SHOW_BRIGHTNESS = _default("SHOW_BRIGHTNESS", "1")$/;"	v
SHOW_BRIGHTNESS_VALUE	monitor_manager/monitor_manager.py	/^SHOW_BRIGHTNESS_VALUE = _default("SHOW_BRIGHTNESS_VALUE", "0")$/;"	v
SHOW_UP_DOWN	monitor_manager/monitor_manager.py	/^SHOW_UP_DOWN = _default("SHOW_UP_DOWN", "1")$/;"	v
FONTAWESOME_FONT_FAMILY	monitor_manager/monitor_manager.py	/^FONTAWESOME_FONT_FAMILY = "FontAwesome"$/;"	v
FONTAWESOME_FONT_SIZE	monitor_manager/monitor_manager.py	/^FONTAWESOME_FONT_SIZE = 11$/;"	v
FONTAWESOME_FONT	monitor_manager/monitor_manager.py	/^FONTAWESOME_FONT = (FONTAWESOME_FONT_FAMILY, FONTAWESOME_FONT_SIZE)$/;"	v
DEFAULT_FONT_FAMILY	monitor_manager/monitor_manager.py	/^DEFAULT_FONT_FAMILY = _default("FONT_FAMILY","DejaVu Sans Mono", str)$/;"	v
DEFAULT_FONT_SIZE	monitor_manager/monitor_manager.py	/^DEFAULT_FONT_SIZE = _default("FONT_SIZE", 11, int)$/;"	v
DEFAULT_FONT	monitor_manager/monitor_manager.py	/^DEFAULT_FONT = (DEFAULT_FONT_FAMILY, DEFAULT_FONT_SIZE)$/;"	v
BRIGHTNESS_SLIDER_HANDLE_LENGTH	monitor_manager/monitor_manager.py	/^BRIGHTNESS_SLIDER_HANDLE_LENGTH = 20$/;"	v
BRIGHTNESS_SLIDER_WIDTH	monitor_manager/monitor_manager.py	/^BRIGHTNESS_SLIDER_WIDTH = 15$/;"	v
BRIGHTNESS_SLIDER_LENGTH	monitor_manager/monitor_manager.py	/^BRIGHTNESS_SLIDER_LENGTH = 50$/;"	v
WINDOW_CLOSE_TO_BOUNDARY_BUFFER	monitor_manager/monitor_manager.py	/^WINDOW_CLOSE_TO_BOUNDARY_BUFFER = _default("CLOSE_TO_BOUNDARY_BUFFER", 20, int)$/;"	v
Output	monitor_manager/monitor_manager.py	/^class Output:$/;"	c
__init__	monitor_manager/monitor_manager.py	/^    def __init__(self, name=None, w=None, h=None, x=None, y=None, rate=None,$/;"	m	class:Output
setPreferredMode	monitor_manager/monitor_manager.py	/^    def setPreferredMode(self):$/;"	m	class:Output
setMode	monitor_manager/monitor_manager.py	/^    def setMode(self, index):$/;"	m	class:Output
realOutputs	monitor_manager/monitor_manager.py	/^    def realOutputs():$/;"	m	class:Output
modestr	monitor_manager/monitor_manager.py	/^    def modestr(mode):$/;"	m	class:Output
status	monitor_manager/monitor_manager.py	/^    def status(self):$/;"	m	class:Output
__str__	monitor_manager/monitor_manager.py	/^    def __str__(self):$/;"	m	class:Output
MonitorManager	monitor_manager/monitor_manager.py	/^class MonitorManager():$/;"	c
__init__	monitor_manager/monitor_manager.py	/^    def __init__(self, root):$/;"	m	class:MonitorManager
registerBindings	monitor_manager/monitor_manager.py	/^    def registerBindings(self):$/;"	m	class:MonitorManager
gridRow	monitor_manager/monitor_manager.py	/^    def gridRow(self, row, widgets):$/;"	m	class:MonitorManager
moveToMouse	monitor_manager/monitor_manager.py	/^    def moveToMouse(self):$/;"	m	class:MonitorManager
setInfo	monitor_manager/monitor_manager.py	/^    def setInfo(self, widget, info):$/;"	m	class:MonitorManager
handleApply	monitor_manager/monitor_manager.py	/^    def handleApply(self, e=None):$/;"	m	class:MonitorManager
doHandleApply	monitor_manager/monitor_manager.py	/^    def doHandleApply(self):$/;"	m	class:MonitorManager
executeXrandrCommand	monitor_manager/monitor_manager.py	/^    def executeXrandrCommand(self, command):$/;"	m	class:MonitorManager
getUserConfirmationIfDangerousConfiguration	monitor_manager/monitor_manager.py	/^    def getUserConfirmationIfDangerousConfiguration(self):$/;"	m	class:MonitorManager
sameAsPartition	monitor_manager/monitor_manager.py	/^    def sameAsPartition(self):$/;"	m	class:MonitorManager
handleCancel	monitor_manager/monitor_manager.py	/^    def handleCancel(self, e=None):$/;"	m	class:MonitorManager
handleArandr	monitor_manager/monitor_manager.py	/^    def handleArandr(self, e=None):$/;"	m	class:MonitorManager
handleUp	monitor_manager/monitor_manager.py	/^    def handleUp(self, e):$/;"	m	class:MonitorManager
handleDown	monitor_manager/monitor_manager.py	/^    def handleDown(self, e):$/;"	m	class:MonitorManager
swapOutputRows	monitor_manager/monitor_manager.py	/^    def swapOutputRows(self, row1, row2):$/;"	m	class:MonitorManager
setPrimary	monitor_manager/monitor_manager.py	/^    def setPrimary(self, e):$/;"	m	class:MonitorManager
existsPrimary	monitor_manager/monitor_manager.py	/^    def existsPrimary(self):$/;"	m	class:MonitorManager
toggleActive	monitor_manager/monitor_manager.py	/^    def toggleActive(self, e):$/;"	m	class:MonitorManager
toggleBlanked	monitor_manager/monitor_manager.py	/^    def toggleBlanked(self, e):$/;"	m	class:MonitorManager
updateBrightness	monitor_manager/monitor_manager.py	/^    def updateBrightness(self, e):$/;"	m	class:MonitorManager
cycleRotation	monitor_manager/monitor_manager.py	/^    def cycleRotation(self, e):$/;"	m	class:MonitorManager
rotationSymbol	monitor_manager/monitor_manager.py	/^    def rotationSymbol(self, rotation):$/;"	m	class:MonitorManager
cycleReflection	monitor_manager/monitor_manager.py	/^    def cycleReflection(self, e):$/;"	m	class:MonitorManager
reflectionSymbol	monitor_manager/monitor_manager.py	/^    def reflectionSymbol(self, reflection):$/;"	m	class:MonitorManager
toggleDuplicate	monitor_manager/monitor_manager.py	/^    def toggleDuplicate(self, e):$/;"	m	class:MonitorManager
getDuplicableOutputsFor	monitor_manager/monitor_manager.py	/^    def getDuplicableOutputsFor(self, output):$/;"	m	class:MonitorManager
softRefreshList	monitor_manager/monitor_manager.py	/^    def softRefreshList(self, e=None):$/;"	m	class:MonitorManager
hardRefreshList	monitor_manager/monitor_manager.py	/^    def hardRefreshList(self, e=None):$/;"	m	class:MonitorManager
populateGrid	monitor_manager/monitor_manager.py	/^    def populateGrid(self):$/;"	m	class:MonitorManager
makeLabelRow	monitor_manager/monitor_manager.py	/^    def makeLabelRow(self, output, row):$/;"	m	class:MonitorManager
setMenuToOutput	monitor_manager/monitor_manager.py	/^    def setMenuToOutput(self, optionMenu, output):$/;"	m	class:MonitorManager
setMenuToDuplicate	monitor_manager/monitor_manager.py	/^    def setMenuToDuplicate(self, optionMenu):$/;"	m	class:MonitorManager
handleFocusOut	monitor_manager/monitor_manager.py	/^    def handleFocusOut(self, event):$/;"	m	class:MonitorManager
setLabelAndOutputModeFunc	monitor_manager/monitor_manager.py	/^def setLabelAndOutputModeFunc(var, label, output, i):$/;"	f
func	monitor_manager/monitor_manager.py	/^    def func():$/;"	f	function:setLabelAndOutputModeFunc	file:
setLabelAndSameAsFunc	monitor_manager/monitor_manager.py	/^def setLabelAndSameAsFunc(var, sameAs, output):$/;"	f
func	monitor_manager/monitor_manager.py	/^    def func():$/;"	f	function:setLabelAndSameAsFunc	file:
root	monitor_manager/monitor_manager.py	/^        root = Tk()$/;"	v
manager	monitor_manager/monitor_manager.py	/^        manager = MonitorManager(root)$/;"	v
default_interface	bandwidth3/bandwidth3	/^function default_interface {$/;"	f
check_proc_net_dev	bandwidth3/bandwidth3	/^function check_proc_net_dev {$/;"	f
list_interfaces	bandwidth3/bandwidth3	/^function list_interfaces {$/;"	f
bandwidth3	bandwidth3/README.md	/^# bandwidth3$/;"	c
Usage	bandwidth3/README.md	/^# Usage$/;"	c
bandwidth3	bandwidth3/i3blocks.conf	/^[bandwidth3]$/;"	s
command	bandwidth3/i3blocks.conf	/^command=$SCRIPT_DIR\/bandwidth3$/;"	k	section:bandwidth3
interval	bandwidth3/i3blocks.conf	/^interval=persist$/;"	k	section:bandwidth3
markup	bandwidth3/i3blocks.conf	/^markup=pango$/;"	k	section:bandwidth3
cpu_util_detailed	cpu_util_detailed/README.md	/^# cpu_util_detailed$/;"	c
Recommended:	cpu_util_detailed/README.md	/^## Recommended:$/;"	s
Required:	cpu_util_detailed/README.md	/^## Required:$/;"	s
i3blocks config example:	cpu_util_detailed/README.md	/^## i3blocks config example:$/;"	s
WARNING	cpu_util_detailed/README.md	/^## WARNING$/;"	s
cpu_util_detailed	cpu_util_detailed/i3blocks.conf	/^[cpu_util_detailed]$/;"	s
command	cpu_util_detailed/i3blocks.conf	/^command=$SCRIPT_DIR\/cpu_util_detailed$/;"	k	section:cpu_util_detailed
label	cpu_util_detailed/i3blocks.conf	/^label=CPU$/;"	k	section:cpu_util_detailed
markup	cpu_util_detailed/i3blocks.conf	/^markup=pango$/;"	k	section:cpu_util_detailed
interval	cpu_util_detailed/i3blocks.conf	/^interval=-2$/;"	k	section:cpu_util_detailed
backlight	backlight/README.md	/^# backlight$/;"	c
Setup / Usage	backlight/README.md	/^## Setup \/ Usage$/;"	s
Dependencies	backlight/README.md	/^## Dependencies$/;"	s
GNU GENERAL PUBLIC LICENSE	backlight/LICENSE.md	/^### GNU GENERAL PUBLIC LICENSE$/;"	S
Preamble	backlight/LICENSE.md	/^### Preamble$/;"	S
TERMS AND CONDITIONS	backlight/LICENSE.md	/^### TERMS AND CONDITIONS$/;"	S
0. Definitions.	backlight/LICENSE.md	/^#### 0. Definitions.$/;"	t
1. Source Code.	backlight/LICENSE.md	/^#### 1. Source Code.$/;"	t
2. Basic Permissions.	backlight/LICENSE.md	/^#### 2. Basic Permissions.$/;"	t
3. Protecting Users' Legal Rights From Anti-Circumvention Law.	backlight/LICENSE.md	/^#### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.$/;"	t
4. Conveying Verbatim Copies.	backlight/LICENSE.md	/^#### 4. Conveying Verbatim Copies.$/;"	t
5. Conveying Modified Source Versions.	backlight/LICENSE.md	/^#### 5. Conveying Modified Source Versions.$/;"	t
6. Conveying Non-Source Forms.	backlight/LICENSE.md	/^#### 6. Conveying Non-Source Forms.$/;"	t
7. Additional Terms.	backlight/LICENSE.md	/^#### 7. Additional Terms.$/;"	t
8. Termination.	backlight/LICENSE.md	/^#### 8. Termination.$/;"	t
9. Acceptance Not Required for Having Copies.	backlight/LICENSE.md	/^#### 9. Acceptance Not Required for Having Copies.$/;"	t
10. Automatic Licensing of Downstream Recipients.	backlight/LICENSE.md	/^#### 10. Automatic Licensing of Downstream Recipients.$/;"	t
11. Patents.	backlight/LICENSE.md	/^#### 11. Patents.$/;"	t
12. No Surrender of Others' Freedom.	backlight/LICENSE.md	/^#### 12. No Surrender of Others' Freedom.$/;"	t
13. Use with the GNU Affero General Public License.	backlight/LICENSE.md	/^#### 13. Use with the GNU Affero General Public License.$/;"	t
14. Revised Versions of this License.	backlight/LICENSE.md	/^#### 14. Revised Versions of this License.$/;"	t
15. Disclaimer of Warranty.	backlight/LICENSE.md	/^#### 15. Disclaimer of Warranty.$/;"	t
16. Limitation of Liability.	backlight/LICENSE.md	/^#### 16. Limitation of Liability.$/;"	t
17. Interpretation of Sections 15 and 16.	backlight/LICENSE.md	/^#### 17. Interpretation of Sections 15 and 16.$/;"	t
How to Apply These Terms to Your New Programs	backlight/LICENSE.md	/^### How to Apply These Terms to Your New Programs$/;"	S
sp	afs/afs	/^import subprocess as sp$/;"	I
_default	afs/afs	/^def _default(name, default='', arg_type=str):$/;"	f
parser	afs/afs	/^parser = argparse.ArgumentParser($/;"	v
args	afs/afs	/^args = parser.parse_args()$/;"	v
directory	afs/afs	/^directory = os.environ.get('BLOCK_INSTANCE', '~\/afs\/')$/;"	v
label	afs/afs	/^label = os.environ.get('LABEL', '')$/;"	v
directory	afs/afs	/^directory = os.path.expandvars(directory)$/;"	v
directory	afs/afs	/^directory = os.path.expanduser(directory)$/;"	v
fs_output	afs/afs	/^fs_output = sp.check_output(['fs', 'lq', '-human', directory],$/;"	v
fs_output	afs/afs	/^fs_output = fs_output.split('\\n')[1]$/;"	v
quota	afs/afs	/^quota, used, percentage = fs_output.split()[1:4]$/;"	v
used	afs/afs	/^quota, used, percentage = fs_output.split()[1:4]$/;"	v
percentage	afs/afs	/^quota, used, percentage = fs_output.split()[1:4]$/;"	v
percentage	afs/afs	/^percentage = int(percentage.split('%')[0])$/;"	v
output	afs/afs	/^output = '%s%s\/%s (%i%%)' % (label, used, quota, percentage)$/;"	v
output	afs/afs	/^        output = "<span color='%s' bgcolor='%s'>%s<\/span>" %\\$/;"	v
afs	afs/README.md	/^# afs$/;"	c
Setup / Usage	afs/README.md	/^## Setup \/ Usage$/;"	s
Dependencies	afs/README.md	/^## Dependencies$/;"	s
GNU GENERAL PUBLIC LICENSE	afs/LICENSE.md	/^### GNU GENERAL PUBLIC LICENSE$/;"	S
Preamble	afs/LICENSE.md	/^### Preamble$/;"	S
TERMS AND CONDITIONS	afs/LICENSE.md	/^### TERMS AND CONDITIONS$/;"	S
0. Definitions.	afs/LICENSE.md	/^#### 0. Definitions.$/;"	t
1. Source Code.	afs/LICENSE.md	/^#### 1. Source Code.$/;"	t
2. Basic Permissions.	afs/LICENSE.md	/^#### 2. Basic Permissions.$/;"	t
3. Protecting Users' Legal Rights From Anti-Circumvention Law.	afs/LICENSE.md	/^#### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.$/;"	t
4. Conveying Verbatim Copies.	afs/LICENSE.md	/^#### 4. Conveying Verbatim Copies.$/;"	t
5. Conveying Modified Source Versions.	afs/LICENSE.md	/^#### 5. Conveying Modified Source Versions.$/;"	t
6. Conveying Non-Source Forms.	afs/LICENSE.md	/^#### 6. Conveying Non-Source Forms.$/;"	t
7. Additional Terms.	afs/LICENSE.md	/^#### 7. Additional Terms.$/;"	t
8. Termination.	afs/LICENSE.md	/^#### 8. Termination.$/;"	t
9. Acceptance Not Required for Having Copies.	afs/LICENSE.md	/^#### 9. Acceptance Not Required for Having Copies.$/;"	t
10. Automatic Licensing of Downstream Recipients.	afs/LICENSE.md	/^#### 10. Automatic Licensing of Downstream Recipients.$/;"	t
11. Patents.	afs/LICENSE.md	/^#### 11. Patents.$/;"	t
12. No Surrender of Others' Freedom.	afs/LICENSE.md	/^#### 12. No Surrender of Others' Freedom.$/;"	t
13. Use with the GNU Affero General Public License.	afs/LICENSE.md	/^#### 13. Use with the GNU Affero General Public License.$/;"	t
14. Revised Versions of this License.	afs/LICENSE.md	/^#### 14. Revised Versions of this License.$/;"	t
15. Disclaimer of Warranty.	afs/LICENSE.md	/^#### 15. Disclaimer of Warranty.$/;"	t
16. Limitation of Liability.	afs/LICENSE.md	/^#### 16. Limitation of Liability.$/;"	t
17. Interpretation of Sections 15 and 16.	afs/LICENSE.md	/^#### 17. Interpretation of Sections 15 and 16.$/;"	t
How to Apply These Terms to Your New Programs	afs/LICENSE.md	/^### How to Apply These Terms to Your New Programs$/;"	S
wlan-dbm	wlan-dbm/README.md	/^# wlan-dbm$/;"	c
Usage	wlan-dbm/README.md	/^# Usage$/;"	c
Dependencies	wlan-dbm/README.md	/^# Dependencies$/;"	c
Config	wlan-dbm/README.md	/^# Config$/;"	c
help	keyindicator/keyindicator	/^sub help {$/;"	s
keyindicator	keyindicator/README.md	/^# keyindicator$/;"	c
Installation	keyindicator/README.md	/^# Installation$/;"	c
Options	keyindicator/README.md	/^# Options$/;"	c
ytdl-mpv	ytdl-mpv/README.md	/^# ytdl-mpv$/;"	c
Requirements	ytdl-mpv/README.md	/^# Requirements$/;"	c
Installation	ytdl-mpv/README.md	/^# Installation$/;"	c
ytdl-mpv	ytdl-mpv/i3blocks.conf	/^[ytdl-mpv]                                                                         $/;"	s
command	ytdl-mpv/i3blocks.conf	/^command=$SCRIPT_DIR\/ytdl-mpv                                                    $/;"	k	section:ytdl-mpv
markup	ytdl-mpv/i3blocks.conf	/^markup=pango                                                                    $/;"	k	section:ytdl-mpv
interval	ytdl-mpv/i3blocks.conf	/^interval=once                                                                      $/;"	k	section:ytdl-mpv
signal	ytdl-mpv/i3blocks.conf	/^signal=4$/;"	k	section:ytdl-mpv
apt-upgrades	apt-upgrades/README.md	/^# apt-upgrades$/;"	c
Requirements	apt-upgrades/README.md	/^# Requirements$/;"	c
Suggested usage	apt-upgrades/README.md	/^# Suggested usage$/;"	c
Simple usage	apt-upgrades/README.md	/^# Simple usage$/;"	c
Config	apt-upgrades/README.md	/^# Config$/;"	c
apt-upgrades	apt-upgrades/i3blocks.conf	/^[apt-upgrades]$/;"	s
command	apt-upgrades/i3blocks.conf	/^command=$SCRIPT_DIR\/apt-upgrades$/;"	k	section:apt-upgrades
signal	apt-upgrades/i3blocks.conf	/^signal=1$/;"	k	section:apt-upgrades
interval	apt-upgrades/i3blocks.conf	/^interval=once$/;"	k	section:apt-upgrades
go	go/README.md	/^# go$/;"	c
Dependencies	go/README.md	/^# Dependencies$/;"	c
Config	go/README.md	/^# Config$/;"	c
go	go/i3blocks.conf	/^[go]$/;"	s
command	go/i3blocks.conf	/^command=$SCRIPT_DIR\/go$/;"	k	section:go
interval	go/i3blocks.conf	/^interval=once$/;"	k	section:go
label	go/i3blocks.conf	/^label=/;"	k	section:go
list_devices	disk-io/disk-io	/^function list_devices {$/;"	f
disk-io	disk-io/README.md	/^# disk-io$/;"	c
Dependencies	disk-io/README.md	/^# Dependencies$/;"	c
Usage	disk-io/README.md	/^# Usage$/;"	c
Options	disk-io/README.md	/^# Options$/;"	c
calendar	calendar/README.md	/^# calendar$/;"	c
Dependencies	calendar/README.md	/^# Dependencies$/;"	c
Installation	calendar/README.md	/^# Installation$/;"	c
Configuration	calendar/README.md	/^# Configuration$/;"	c
help	cpu_usage/cpu_usage	/^sub help {$/;"	s
cpu_usage	cpu_usage/README.md	/^# cpu_usage$/;"	c
Dependencies	cpu_usage/README.md	/^# Dependencies$/;"	c
Config	cpu_usage/README.md	/^# Config$/;"	c
cpu_usage	cpu_usage/i3blocks.conf	/^[cpu_usage]$/;"	s
command	cpu_usage/i3blocks.conf	/^command=$SCRIPT_DIR\/cpu_usage$/;"	k	section:cpu_usage
interval	cpu_usage/i3blocks.conf	/^interval=10$/;"	k	section:cpu_usage
LABEL	cpu_usage/i3blocks.conf	/^LABEL=CPU $/;"	k	section:cpu_usage
key_layout	key_layout/README.md	/^# key_layout$/;"	c
Installation	key_layout/README.md	/^# Installation$/;"	c
get_brightness	key_light/key_light	/^function get_brightness {$/;"	f
key_light	key_light/README.md	/^# key_light$/;"	c
Dependencies	key_light/README.md	/^# Dependencies$/;"	c
Config	key_light/README.md	/^# Config$/;"	c
key_light	key_light/i3blocks.conf	/^[key_light]$/;"	s
full_text	key_light/i3blocks.conf	/^full_text=⌨$/;"	k	section:key_light
command	key_light/i3blocks.conf	/^command=$SCRIPT_DIR\/key_light\/key_light$/;"	k	section:key_light
wifi	wifi/README.md	/^# wifi$/;"	c
Config	wifi/README.md	/^# Config$/;"	c
wifi	wifi/i3blocks.conf	/^[wifi]$/;"	s
command	wifi/i3blocks.conf	/^command=$SCRIPT_DIR\/wifi$/;"	k	section:wifi
label	wifi/i3blocks.conf	/^label=wifi:$/;"	k	section:wifi
interval	wifi/i3blocks.conf	/^interval=60$/;"	k	section:wifi
sway-focusedwindow	sway-focusedwindow/README.md	/^# sway-focusedwindow$/;"	c
Requirements	sway-focusedwindow/README.md	/^# Requirements$/;"	c
Command line arguments	sway-focusedwindow/README.md	/^# Command line arguments  $/;"	c
Installation	sway-focusedwindow/README.md	/^# Installation$/;"	c
format	sway-focusedwindow/sway-focusedwindow	/^format() {$/;"	f
process	sway-focusedwindow/sway-focusedwindow	/^process() {$/;"	f
nm-vpn	nm-vpn/README.md	/^# nm-vpn$/;"	c
Requirements	nm-vpn/README.md	/^# Requirements$/;"	c
Usage	nm-vpn/README.md	/^# Usage$/;"	c
Output	nm-vpn/README.md	/^## Output$/;"	s
Config	nm-vpn/README.md	/^# Config$/;"	c
nm-vpn	nm-vpn/i3blocks.conf	/^[nm-vpn]$/;"	s
label	nm-vpn/i3blocks.conf	/^label=VPN:$/;"	k	section:nm-vpn
interval	nm-vpn/i3blocks.conf	/^interval=5$/;"	k	section:nm-vpn
How to contribute	CONTRIBUTING.md	/^# How to contribute$/;"	c
Directory guidelines	CONTRIBUTING.md	/^# Directory guidelines$/;"	c
Dependency guidelines	CONTRIBUTING.md	/^# Dependency guidelines$/;"	c
Pull request guidelines	CONTRIBUTING.md	/^# Pull request guidelines$/;"	c
Example workflow	CONTRIBUTING.md	/^# Example workflow$/;"	c
Community contributed blocklets	README.adoc	/^= Community contributed blocklets$/;"	c
kubernetes	kubernetes/README.md	/^# kubernetes$/;"	c
Dependencies	kubernetes/README.md	/^# Dependencies$/;"	c
Config	kubernetes/README.md	/^# Config$/;"	c
kubernetes	kubernetes/i3blocks.conf	/^[kubernetes]$/;"	s
command	kubernetes/i3blocks.conf	/^command=$SCRIPT_DIR\/kubernetes$/;"	k	section:kubernetes
interval	kubernetes/i3blocks.conf	/^interval=10$/;"	k	section:kubernetes
dimmer	dimmer/README.md	/^# dimmer$/;"	c
Description	dimmer/README.md	/^## Description$/;"	s
Usage	dimmer/README.md	/^## Usage$/;"	s
Options	dimmer/README.md	/^## Options$/;"	s
docker	docker/README.md	/^# docker$/;"	c
Dependencies	docker/README.md	/^# Dependencies$/;"	c
Config	docker/README.md	/^# Config$/;"	c
docker	docker/i3blocks.conf	/^[docker]$/;"	s
command	docker/i3blocks.conf	/^command=$SCRIPT_DIR\/docker$/;"	k	section:docker
color	docker/i3blocks.conf	/^color=#0db7ed$/;"	k	section:docker
interval	docker/i3blocks.conf	/^interval=10$/;"	k	section:docker
LABEL	docker/i3blocks.conf	/^LABEL=🐳 $/;"	k	section:docker
temperature	temperature/README.md	/^# temperature$/;"	c
Dependencies	temperature/README.md	/^# Dependencies$/;"	c
Usage	temperature/README.md	/^# Usage$/;"	c
help	temperature/temperature	/^sub help {$/;"	s
load_average	load_average/README.md	/^# load_average$/;"	c
Config	load_average/README.md	/^# Config$/;"	c
load_average	load_average/i3blocks.conf	/^[load_average]$/;"	s
command	load_average/i3blocks.conf	/^command=$SCRIPT_DIR\/load_average$/;"	k	section:load_average
interval	load_average/i3blocks.conf	/^interval=10$/;"	k	section:load_average
battery2	battery2/README.md	/^# battery2$/;"	c
Dependencies	battery2/README.md	/^# Dependencies$/;"	c
Installation	battery2/README.md	/^# Installation$/;"	c
battery2	battery2/i3blocks.conf	/^[battery2]$/;"	s
command	battery2/i3blocks.conf	/^command=$SCRIPT_DIR\/battery2$/;"	k	section:battery2
markup	battery2/i3blocks.conf	/^markup=pango$/;"	k	section:battery2
interval	battery2/i3blocks.conf	/^interval=30$/;"	k	section:battery2
status	battery2/battery2	/^status = check_output(['acpi'], universal_newlines=True)$/;"	v
fulltext	battery2/battery2	/^    fulltext = "<span color='red'><span font='FontAwesome'>\\uf00d \\uf240<\/span><\/span>"$/;"	v
percentleft	battery2/battery2	/^    percentleft = 100$/;"	v
state_batteries	battery2/battery2	/^    state_batteries=[]$/;"	v
commasplitstatus_batteries	battery2/battery2	/^    commasplitstatus_batteries=[]$/;"	v
percentleft_batteries	battery2/battery2	/^    percentleft_batteries=[]$/;"	v
time	battery2/battery2	/^    time = ""$/;"	v
commasplitstatus	battery2/battery2	/^            commasplitstatus = battery.split(", ")$/;"	v
time	battery2/battery2	/^                time = commasplitstatus[-1].strip()$/;"	v
time	battery2/battery2	/^                time = re.match(r"(\\d+):(\\d+)", time)$/;"	v
time	battery2/battery2	/^                    time = ":".join(time.groups())$/;"	v
timeleft	battery2/battery2	/^                    timeleft = " ({})".format(time)$/;"	v
p	battery2/battery2	/^            p = int(commasplitstatus[1].rstrip("%\\n"))$/;"	v
state	battery2/battery2	/^    state = state_batteries[0]$/;"	v
commasplitstatus	battery2/battery2	/^    commasplitstatus = commasplitstatus_batteries[0]$/;"	v
percentleft	battery2/battery2	/^        percentleft = int(sum(percentleft_batteries)\/len(percentleft_batteries))$/;"	v
FA_LIGHTNING	battery2/battery2	/^    FA_LIGHTNING = "<span color='yellow'><span font='FontAwesome'>\\uf0e7<\/span><\/span>"$/;"	v
FA_PLUG	battery2/battery2	/^    FA_PLUG = "<span font='FontAwesome'>\\uf1e6<\/span>"$/;"	v
FA_BATTERY	battery2/battery2	/^    FA_BATTERY = "<span font='FontAwesome'>\\uf240<\/span>"$/;"	v
FA_QUESTION	battery2/battery2	/^    FA_QUESTION = "<span font='FontAwesome'>\\uf128<\/span>"$/;"	v
fulltext	battery2/battery2	/^        fulltext = FA_BATTERY + " "$/;"	v
fulltext	battery2/battery2	/^        fulltext = FA_PLUG + " "$/;"	v
timeleft	battery2/battery2	/^        timeleft = ""$/;"	v
fulltext	battery2/battery2	/^        fulltext = FA_QUESTION + " " + FA_BATTERY + " "$/;"	v
timeleft	battery2/battery2	/^        timeleft = ""$/;"	v
color	battery2/battery2	/^    def color(percent):$/;"	f
form	battery2/battery2	/^    form =  '<span color="{}">{}%<\/span>'$/;"	v
essid	essid/README.md	/^# essid$/;"	c
Config	essid/README.md	/^# Config$/;"	c
essid	essid/i3blocks.conf	/^[essid]$/;"	s
command	essid/i3blocks.conf	/^command=$SCRIPT_DIR\/essid$/;"	k	section:essid
interval	essid/i3blocks.conf	/^interval=60$/;"	k	section:essid
mediaplayer	mediaplayer/README.md	/^# mediaplayer$/;"	c
Installation	mediaplayer/README.md	/^# Installation$/;"	c
DELAY	mediaplayer/mediaplayer	/^use constant DELAY => 50; # Delay in ms to let network-based players (spotify) reflect new data.$/;"	c
SPOTIFY_STR	mediaplayer/mediaplayer	/^use constant SPOTIFY_STR => 'spotify';$/;"	c
buttons	mediaplayer/mediaplayer	/^sub buttons {$/;"	s
cmus	mediaplayer/mediaplayer	/^sub cmus {$/;"	s
mpd	mediaplayer/mediaplayer	/^sub mpd {$/;"	s
playerctl	mediaplayer/mediaplayer	/^sub playerctl {$/;"	s
rhythmbox	mediaplayer/mediaplayer	/^sub rhythmbox {$/;"	s
systemd_unit	systemd_unit/README.md	/^# systemd_unit$/;"	c
Config	systemd_unit/README.md	/^# Config$/;"	c
dunst	dunst/README.md	/^# dunst$/;"	c
Dependencies	dunst/README.md	/^# Dependencies$/;"	c
Usage	dunst/README.md	/^# Usage$/;"	c
Config	dunst/README.md	/^# Config$/;"	c
dunst	dunst/i3blocks.conf	/^[dunst]$/;"	s
command	dunst/i3blocks.conf	/^command=$SCRIPT_DIR\/dunst$/;"	k	section:dunst
markup	dunst/i3blocks.conf	/^markup=pango$/;"	k	section:dunst
interval	dunst/i3blocks.conf	/^interval=once$/;"	k	section:dunst
format	dunst/i3blocks.conf	/^format=json$/;"	k	section:dunst
__author__	dunst/dunst	/^__author__ = "Jessey White-Cinis <j@cin.is>"$/;"	v
__copyright__	dunst/dunst	/^__copyright__ = "Copyright (c) 2019 Jessey White-Cinis"$/;"	v
__license__	dunst/dunst	/^__license__ = "MIT"$/;"	v
__version__	dunst/dunst	/^__version__ = "1.0.0"$/;"	v
mute_on	dunst/dunst	/^def mute_on():$/;"	f
mute_off	dunst/dunst	/^def mute_off():$/;"	f
clicked	dunst/dunst	/^def clicked():$/;"	f
muted	dunst/dunst	/^def muted():$/;"	f
RTN	dunst/dunst	/^        RTN = mute_off()$/;"	v
RTN	dunst/dunst	/^        RTN = mute_on()$/;"	v
ssid	ssid/README.md	/^# ssid$/;"	c
Config	ssid/README.md	/^# Config$/;"	c
ssid	ssid/i3blocks.conf	/^[ssid]$/;"	s
command	ssid/i3blocks.conf	/^command=$SCRIPT_DIR\/ssid$/;"	k	section:ssid
interval	ssid/i3blocks.conf	/^interval=60$/;"	k	section:ssid
usb	usb/README.md	/^# usb$/;"	c
Requirements	usb/README.md	/^# Requirements$/;"	c
Installation	usb/README.md	/^# Installation$/;"	c
Configuration	usb/README.md	/^# Configuration$/;"	c
usb	usb/i3blocks.conf	/^[usb]$/;"	s
command	usb/i3blocks.conf	/^command=$SCRIPT_DIR\/usb$/;"	k	section:usb
markup	usb/i3blocks.conf	/^markup=pango$/;"	k	section:usb
signal	usb/i3blocks.conf	/^signal=1$/;"	k	section:usb
interval	usb/i3blocks.conf	/^interval=10$/;"	k	section:usb
_default	usb/usb	/^def _default(name, default='', arg_type=str):$/;"	f
INFO_TEXT_COLOR	usb/usb	/^INFO_TEXT_COLOR = _default("INFO_TEXT_COLOR", "white")$/;"	v
MOUNTED_COLOR	usb/usb	/^MOUNTED_COLOR = _default("MOUNTED_COLOR", "green")$/;"	v
PLUGGED_COLOR	usb/usb	/^PLUGGED_COLOR = _default("PLUGGED_COLOR", "gray")$/;"	v
LOCKED_COLOR	usb/usb	/^LOCKED_COLOR = _default("LOCKED_COLOR", "gray")$/;"	v
UNLOCKED_NOT_MOUNTED_COLOR	usb/usb	/^UNLOCKED_NOT_MOUNTED_COLOR = _default("UNLOCKED_NOT_MOUNTED_COLOR", "yellow")$/;"	v
PARTITIONLESS_COLOR	usb/usb	/^PARTITIONLESS_COLOR = _default("PARTITIONLESS_COLOR", "red")$/;"	v
PARTITIONLESS_TEXT	usb/usb	/^PARTITIONLESS_TEXT = _default("PARTITIONLESS_TEXT", "no partitions")$/;"	v
SEPARATOR	usb/usb	/^SEPARATOR = _default("SEPARATOR", "<span color='gray'> | <\/span>")$/;"	v
LOCKED_INDICATOR	usb/usb	/^LOCKED_INDICATOR = _default("LOCKED_INDICATOR", "\\uf023 ")$/;"	v
UNLOCKED_INDICATOR	usb/usb	/^UNLOCKED_INDICATOR = _default("UNLOCKED_INDICATOR", "\\uf09c ")$/;"	v
READONLY_INDICATOR	usb/usb	/^READONLY_INDICATOR = _default("READONLY_INDICATOR", "ro")$/;"	v
TRUNCATE_FS_LABELS	usb/usb	/^TRUNCATE_FS_LABELS = _default("TRUNCASE_FS_LABELS", None)$/;"	v
IGNORE_LIST	usb/usb	/^IGNORE_LIST = _default("IGNORE_LIST", "[]")$/;"	v
IGNORE_LIST	usb/usb	/^    IGNORE_LIST = list(map(lambda p: $/;"	v
ignore	usb/usb	/^def ignore(path, udev_attributes_dict):$/;"	f
fastIgnore	usb/usb	/^def fastIgnore(path):$/;"	f
pangoEscape	usb/usb	/^def pangoEscape(text):$/;"	f
getLeafDevicePaths	usb/usb	/^def getLeafDevicePaths():$/;"	f
getKernelName	usb/usb	/^def getKernelName(path):$/;"	f
getDeviceType	usb/usb	/^def getDeviceType(path):$/;"	f
getFSType	usb/usb	/^def getFSType(path):$/;"	f
isLUKSPartition	usb/usb	/^def isLUKSPartition(path):$/;"	f
isSwapPartition	usb/usb	/^def isSwapPartition(path):$/;"	f
getFSLabel	usb/usb	/^def getFSLabel(path):$/;"	f
getFSOptions	usb/usb	/^def getFSOptions(path):$/;"	f
isReadOnly	usb/usb	/^def isReadOnly(path):$/;"	f
isExtendedPartitionMarker	usb/usb	/^def isExtendedPartitionMarker(path):$/;"	f
getMountPoint	usb/usb	/^def getMountPoint(path):$/;"	f
getSpaceAvailable	usb/usb	/^def getSpaceAvailable(path):$/;"	f
getLockedCryptOutput	usb/usb	/^def getLockedCryptOutput(path):$/;"	f
getParentKernelName	usb/usb	/^def getParentKernelName(path):$/;"	f
getUnlockedCryptOutput	usb/usb	/^def getUnlockedCryptOutput(path):$/;"	f
getSwapOutput	usb/usb	/^def getSwapOutput(path):$/;"	f
getUnencryptedPartitionOutput	usb/usb	/^def getUnencryptedPartitionOutput(path): $/;"	f
getDiskWithNoPartitionsOutput	usb/usb	/^def getDiskWithNoPartitionsOutput(path):$/;"	f
getOutput	usb/usb	/^def getOutput(path):$/;"	f
makeAttributeMap	usb/usb	/^def makeAttributeMap(path):$/;"	f
getAttributeMaps	usb/usb	/^def getAttributeMaps(paths):$/;"	f
parseArguments	usb/usb	/^def parseArguments():$/;"	f
setParsedArgs	usb/usb	/^def setParsedArgs(args):$/;"	f
newFastIgnore	usb/usb	/^        def newFastIgnore(path):$/;"	f	function:setParsedArgs	file:
leaves	usb/usb	/^leaves = getLeafDevicePaths()$/;"	v
leaves	usb/usb	/^leaves = [path for path in leaves if not fastIgnore(path)]$/;"	v
attributeMaps	usb/usb	/^attributeMaps = getAttributeMaps(leaves)$/;"	v
leaves	usb/usb	/^leaves = (path for path in leaves if not ignore(path, attributeMaps[path]))$/;"	v
outputs	usb/usb	/^outputs = filter(None, map(getOutput, leaves))$/;"	v
output	usb/usb	/^output = SEPARATOR.join(outputs)$/;"	v
output	usb/usb	/^    output = "<span color='{}'>{}<\/span>".format(INFO_TEXT_COLOR, output)$/;"	v
aur-update	aur-update/README.md	/^# aur-update$/;"	c
Setup / Usage	aur-update/README.md	/^## Setup \/ Usage$/;"	s
Dependencies	aur-update/README.md	/^## Dependencies$/;"	s
sp	aur-update/aur-update	/^import subprocess as sp$/;"	I
block_button	aur-update/aur-update	/^block_button = os.environ['BLOCK_BUTTON'] if 'BLOCK_BUTTON' in os.environ else None$/;"	v
block_button	aur-update/aur-update	/^block_button = int(block_button) if block_button else None$/;"	v
Args	aur-update/aur-update	/^class Args(object):$/;"	c
add_argument	aur-update/aur-update	/^    def add_argument(self, name, default='', arg_type=str):$/;"	m	class:Args
args	aur-update/aur-update	/^args = Args()$/;"	v
version_in_aur	aur-update/aur-update	/^def version_in_aur(pkg):$/;"	f
vcs_version	aur-update/aur-update	/^def vcs_version(pkg, ver):$/;"	f
packages	aur-update/aur-update	/^packages = sp.check_output(['pacman', '-Qm']).decode('utf8')$/;"	v
installed_version	aur-update/aur-update	/^installed_version = {}$/;"	v
pkg	aur-update/aur-update	/^    pkg, ver = pkg.split()$/;"	v
ver	aur-update/aur-update	/^    pkg, ver = pkg.split()$/;"	v
updates	aur-update/aur-update	/^updates = []$/;"	v
v_aur	aur-update/aur-update	/^    v_aur = version_in_aur(pkg)$/;"	v
v_inst	aur-update/aur-update	/^    v_inst = installed_version[pkg]$/;"	v
n_updates	aur-update/aur-update	/^n_updates = len(updates)$/;"	v
msg	aur-update/aur-update	/^    msg = "<span color='{0}'>{1} AUR updates<\/span>"$/;"	v
GNU GENERAL PUBLIC LICENSE	aur-update/LICENSE.md	/^### GNU GENERAL PUBLIC LICENSE$/;"	S
Preamble	aur-update/LICENSE.md	/^### Preamble$/;"	S
TERMS AND CONDITIONS	aur-update/LICENSE.md	/^### TERMS AND CONDITIONS$/;"	S
0. Definitions.	aur-update/LICENSE.md	/^#### 0. Definitions.$/;"	t
1. Source Code.	aur-update/LICENSE.md	/^#### 1. Source Code.$/;"	t
2. Basic Permissions.	aur-update/LICENSE.md	/^#### 2. Basic Permissions.$/;"	t
3. Protecting Users' Legal Rights From Anti-Circumvention Law.	aur-update/LICENSE.md	/^#### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.$/;"	t
4. Conveying Verbatim Copies.	aur-update/LICENSE.md	/^#### 4. Conveying Verbatim Copies.$/;"	t
5. Conveying Modified Source Versions.	aur-update/LICENSE.md	/^#### 5. Conveying Modified Source Versions.$/;"	t
6. Conveying Non-Source Forms.	aur-update/LICENSE.md	/^#### 6. Conveying Non-Source Forms.$/;"	t
7. Additional Terms.	aur-update/LICENSE.md	/^#### 7. Additional Terms.$/;"	t
8. Termination.	aur-update/LICENSE.md	/^#### 8. Termination.$/;"	t
9. Acceptance Not Required for Having Copies.	aur-update/LICENSE.md	/^#### 9. Acceptance Not Required for Having Copies.$/;"	t
10. Automatic Licensing of Downstream Recipients.	aur-update/LICENSE.md	/^#### 10. Automatic Licensing of Downstream Recipients.$/;"	t
11. Patents.	aur-update/LICENSE.md	/^#### 11. Patents.$/;"	t
12. No Surrender of Others' Freedom.	aur-update/LICENSE.md	/^#### 12. No Surrender of Others' Freedom.$/;"	t
13. Use with the GNU Affero General Public License.	aur-update/LICENSE.md	/^#### 13. Use with the GNU Affero General Public License.$/;"	t
14. Revised Versions of this License.	aur-update/LICENSE.md	/^#### 14. Revised Versions of this License.$/;"	t
15. Disclaimer of Warranty.	aur-update/LICENSE.md	/^#### 15. Disclaimer of Warranty.$/;"	t
16. Limitation of Liability.	aur-update/LICENSE.md	/^#### 16. Limitation of Liability.$/;"	t
17. Interpretation of Sections 15 and 16.	aur-update/LICENSE.md	/^#### 17. Interpretation of Sections 15 and 16.$/;"	t
How to Apply These Terms to Your New Programs	aur-update/LICENSE.md	/^### How to Apply These Terms to Your New Programs$/;"	S
memory	memory/README.md	/^# memory$/;"	c
Config	memory/README.md	/^# Config$/;"	c
memory	memory/i3blocks.conf	/^[memory]$/;"	s
command	memory/i3blocks.conf	/^command=$SCRIPT_DIR\/memory$/;"	k	section:memory
label	memory/i3blocks.conf	/^label=MEM$/;"	k	section:memory
interval	memory/i3blocks.conf	/^interval=30$/;"	k	section:memory
shutdown_menu	shutdown_menu/README.md	/^# shutdown_menu$/;"	c
Requirements	shutdown_menu/README.md	/^# Requirements$/;"	c
Usage	shutdown_menu/README.md	/^# Usage$/;"	c
shutdown_menu	shutdown_menu/i3blocks.conf	/^[shutdown_menu]$/;"	s
full_text	shutdown_menu/i3blocks.conf	/^full_text=Quit$/;"	k	section:shutdown_menu
command	shutdown_menu/i3blocks.conf	/^command=$SCRIPT_DIR\/shutdown_menu$/;"	k	section:shutdown_menu
check_launcher	shutdown_menu/shutdown_menu	/^function check_launcher() {$/;"	f
command_exists	shutdown_menu/shutdown_menu	/^function command_exists() {$/;"	f
prepare_launcher	shutdown_menu/shutdown_menu	/^function prepare_launcher() {$/;"	f
ask_confirmation	shutdown_menu/shutdown_menu	/^function ask_confirmation() {$/;"	f
_DEFAULT_SOURCE	bandwidth2/bandwidth2.c	/^#define _DEFAULT_SOURCE$/;"	d	file:
RED	bandwidth2/bandwidth2.c	/^#define RED /;"	d	file:
ORANGE	bandwidth2/bandwidth2.c	/^#define ORANGE /;"	d	file:
ulli	bandwidth2/bandwidth2.c	/^typedef unsigned long long int ulli;$/;"	t	typeref:typename:unsigned long long int	file:
__anonf12ccf130103	bandwidth2/bandwidth2.c	/^enum {$/;"	g	file:
STATE_OK	bandwidth2/bandwidth2.c	/^  STATE_OK,$/;"	e	enum:__anonf12ccf130103	file:
STATE_WARNING	bandwidth2/bandwidth2.c	/^  STATE_WARNING,$/;"	e	enum:__anonf12ccf130103	file:
STATE_CRITICAL	bandwidth2/bandwidth2.c	/^  STATE_CRITICAL,$/;"	e	enum:__anonf12ccf130103	file:
STATE_UNKNOWN	bandwidth2/bandwidth2.c	/^  STATE_UNKNOWN,$/;"	e	enum:__anonf12ccf130103	file:
usage	bandwidth2/bandwidth2.c	/^void usage(char *argv[])$/;"	f	typeref:typename:void
get_values	bandwidth2/bandwidth2.c	/^void get_values(char **const ifaces, int num_ifaces, time_t * const s, ulli * const received, ul/;"	f	typeref:typename:void
display	bandwidth2/bandwidth2.c	/^void display(int const unit, int const divisor,$/;"	f	typeref:typename:void
parse_ifaces	bandwidth2/bandwidth2.c	/^void parse_ifaces(char *str, char ***ifaces, int *num_ifaces)$/;"	f	typeref:typename:void
main	bandwidth2/bandwidth2.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
P	bandwidth2/Makefile	/^P=bandwidth2$/;"	m
OBJECTS	bandwidth2/Makefile	/^OBJECTS=$/;"	m
CFLAGS	bandwidth2/Makefile	/^CFLAGS=-g -Wall -Werror -O2 -std=c11$/;"	m
LDLIBS	bandwidth2/Makefile	/^LDLIBS=$/;"	m
$(P)	bandwidth2/Makefile	/^$(P): $(OBJECTS)$/;"	t
bandwidth2	bandwidth2/README.md	/^# bandwidth2$/;"	c
Build	bandwidth2/README.md	/^## Build$/;"	s
Config	bandwidth2/README.md	/^### Config$/;"	S
bandwidth	bandwidth/README.md	/^# bandwidth$/;"	c
Config	bandwidth/README.md	/^# Config$/;"	c
bandwidth	bandwidth/i3blocks.conf	/^[bandwidth]$/;"	s
command	bandwidth/i3blocks.conf	/^command=$SCRIPT_DIR\/bandwidth$/;"	k	section:bandwidth
interval	bandwidth/i3blocks.conf	/^interval=5$/;"	k	section:bandwidth
INTERFACE	bandwidth/i3blocks.conf	/^INTERFACE=eth0$/;"	k	section:bandwidth
kbdd_layout	kbdd_layout/README.md	/^# kbdd_layout$/;"	c
Requirements	kbdd_layout/README.md	/^# Requirements$/;"	c
Config	kbdd_layout/README.md	/^# Config$/;"	c
tahoe-lafs	tahoe-lafs/README.md	/^# tahoe-lafs$/;"	c
Requirements	tahoe-lafs/README.md	/^# Requirements$/;"	c
Usage	tahoe-lafs/README.md	/^# Usage$/;"	c
tahoe-lafs	tahoe-lafs/i3blocks.conf	/^[tahoe-lafs]$/;"	s
command	tahoe-lafs/i3blocks.conf	/^command=$SCRIPT_DIR\/tahoe-lafs$/;"	k	section:tahoe-lafs
instance	tahoe-lafs/i3blocks.conf	/^instance=localhost:3456$/;"	k	section:tahoe-lafs
interval	tahoe-lafs/i3blocks.conf	/^interval=3600$/;"	k	section:tahoe-lafs
timer_and_stopwatch	timer_and_stopwatch/README.md	/^# timer_and_stopwatch$/;"	c
error	timer_and_stopwatch/timer_and_stopwatch	/^error() {$/;"	f
next_mode	timer_and_stopwatch/timer_and_stopwatch	/^next_mode() {$/;"	f
play_pause	timer_and_stopwatch/timer_and_stopwatch	/^play_pause() {$/;"	f
play	timer_and_stopwatch/timer_and_stopwatch	/^play() {$/;"	f
pause	timer_and_stopwatch/timer_and_stopwatch	/^pause() {$/;"	f
reset_times	timer_and_stopwatch/timer_and_stopwatch	/^reset_times() {$/;"	f
set_mode	timer_and_stopwatch/timer_and_stopwatch	/^set_mode() {$/;"	f
compute_color	timer_and_stopwatch/timer_and_stopwatch	/^compute_color() {$/;"	f
prettify_time	timer_and_stopwatch/timer_and_stopwatch	/^prettify_time() {$/;"	f
EOF	timer_and_stopwatch/timer_and_stopwatch	/^cat << EOF$/;"	h
P	cpu_usage2/Makefile	/^P=cpu_usage2$/;"	m
OBJECTS	cpu_usage2/Makefile	/^OBJECTS=$/;"	m
CFLAGS	cpu_usage2/Makefile	/^CFLAGS=-g -Wall -Werror -O2 -std=gnu11$/;"	m
LDLIBS	cpu_usage2/Makefile	/^LDLIBS=$/;"	m
$(P)	cpu_usage2/Makefile	/^$(P): $(OBJECTS)$/;"	t
cpu_usage2	cpu_usage2/README.md	/^# cpu_usage2$/;"	c
Config	cpu_usage2/README.md	/^# Config$/;"	c
cpu_usage2	cpu_usage2/i3blocks.conf	/^[cpu_usage2]$/;"	s
command	cpu_usage2/i3blocks.conf	/^command=$SCRIPT_DIR\/cpu_usage2$/;"	k	section:cpu_usage2
markup	cpu_usage2/i3blocks.conf	/^markup=pango$/;"	k	section:cpu_usage2
interval	cpu_usage2/i3blocks.conf	/^interval=persist$/;"	k	section:cpu_usage2
RED	cpu_usage2/cpu_usage2.c	/^#define RED /;"	d	file:
ORANGE	cpu_usage2/cpu_usage2.c	/^#define ORANGE /;"	d	file:
ulli	cpu_usage2/cpu_usage2.c	/^typedef unsigned long long int ulli;$/;"	t	typeref:typename:unsigned long long int	file:
usage	cpu_usage2/cpu_usage2.c	/^void usage(char *argv[])$/;"	f	typeref:typename:void
display	cpu_usage2/cpu_usage2.c	/^void display(const char *label, double used,$/;"	f	typeref:typename:void
get_usage	cpu_usage2/cpu_usage2.c	/^ulli get_usage(ulli *used_jiffies)$/;"	f	typeref:typename:ulli
main	cpu_usage2/cpu_usage2.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
gpu-load	gpu-load/README.md	/^# gpu-load$/;"	c
Dependencies	gpu-load/README.md	/^# Dependencies$/;"	c
Config	gpu-load/README.md	/^# Config$/;"	c
help	gpu-load/gpu-load	/^sub help {$/;"	s
